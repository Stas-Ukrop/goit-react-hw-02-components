{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/Buttons/Buttons.js","components/Sections/Sections.js","App.js","index.js"],"names":["Notification","message","Statistics","good","neutral","bad","title","useState","total","setTotal","positive","setPositive","useEffect","Math","round","Buttons","type","onClick","Sections","children","propTypes","PropTypes","any","App","setGood","setNeutral","setBad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAOeA,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,KC+BCC,EA/BI,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAAY,EAC1BC,mBAAS,GADiB,mBAC7CC,EAD6C,KACtCC,EADsC,OAEpBF,mBAAS,GAFW,mBAE7CG,EAF6C,KAEnCC,EAFmC,KAUpD,OAPAC,qBAAU,WAER,GADAH,EAASN,EAAOC,EAAUC,GACb,IAATF,EACJ,OAAgB,IAAZC,GAAyB,IAARC,EAAkBM,EAAY,KACnC,IAAZP,GAAyB,IAARC,EACZM,EAAYE,KAAKC,MAAOX,EAAOK,EAAS,WADjD,IAEC,CAACL,EAAMC,EAASC,EAAKG,IAEtB,mCACGL,GAAQE,GAAOD,EACd,gCACE,6BAAKE,IACL,yCAAYH,KACZ,uBACA,4CAAeC,KACf,uBACA,wCAAWC,KACX,uBACA,0CAAaG,KACb,uBACA,sDAAyBE,QAG3B,cAAC,EAAD,CAAcT,QAAQ,yBCXfc,G,MAfC,SAAC,GAA4B,IAA1BZ,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAChC,OACE,qCACE,wBAAQW,KAAK,SAASC,QAASd,EAA/B,kBAGA,wBAAQa,KAAK,SAASC,QAASb,EAA/B,qBAGA,wBAAQY,KAAK,SAASC,QAASZ,EAA/B,sB,OCXAa,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OAAO,mCAAGA,KAEGD,IACfA,EAASE,UAAY,CACnBD,S,OAAUE,EAAUC,KCDtB,IAmCeC,EAnCH,WAAO,IAAD,EACQhB,mBAAS,GADjB,mBACTJ,EADS,KACHqB,EADG,OAEcjB,mBAAS,GAFvB,mBAETH,EAFS,KAEAqB,EAFA,OAGMlB,mBAAS,GAHf,mBAGTF,EAHS,KAGJqB,EAHI,KAchB,OACE,qCACE,uDAEA,eAAC,EAAD,WACE,cAAC,EAAD,CACEvB,KAfU,WAChBqB,GAAQ,SAACrB,GAAD,OAAUA,EAAO,MAenBC,QAba,WACnBqB,GAAW,SAACrB,GAAD,OAAaA,EAAU,MAa5BC,IAXS,WACfqB,GAAO,SAACrB,GAAD,OAASA,EAAM,QAYlB,cAAC,EAAD,CACEC,MAAM,aACNH,KAAMA,EACNC,QAASA,EACTC,IAAKA,WC9BfsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.26b2229b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h2>{message}</h2>;\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Notification from \"../Notification\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, title }) => {\r\n  const [total, setTotal] = useState(0);\r\n  const [positive, setPositive] = useState(0);\r\n  useEffect(() => {\r\n    setTotal(good + neutral + bad);\r\n    if (good === 0) return;\r\n    if (neutral === 0 && bad === 0) return setPositive(100);\r\n    if (neutral !== 0 || bad !== 0)\r\n      return setPositive(Math.round((good / total) * 100));\r\n  }, [good, neutral, bad, total]);\r\n  return (\r\n    <>\r\n      {good || bad || neutral ? (\r\n        <div>\r\n          <h1>{title}</h1>\r\n          <span>Good:{good}</span>\r\n          <br />\r\n          <span>Neutral:{neutral}</span>\r\n          <br />\r\n          <span>Bad:{bad}</span>\r\n          <br />\r\n          <span>Total:{total}</span>\r\n          <br />\r\n          <span>Positive feedback:{positive}</span>\r\n        </div>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  title: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport \"./Buttons.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Buttons = ({ good, neutral, bad }) => {\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={good}>\r\n        good\r\n      </button>\r\n      <button type=\"button\" onClick={neutral}>\r\n        neutral\r\n      </button>\r\n      <button type=\"button\" onClick={bad}>\r\n        bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default Buttons;\r\nButtons.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Sections = ({ children }) => {\r\n  return <>{children}</>;\r\n};\r\nexport default Sections;\r\nSections.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport Statistics from \"./components/Statistics\";\r\nimport FeedbackOptions from \"./components/Buttons\";\r\nimport Sections from \"./components/Sections\";\r\n\r\nconst App = () => {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const goodVoise = () => {\r\n    setGood((good) => good + 1);\r\n  };\r\n  const neuiralVoise = () => {\r\n    setNeutral((neutral) => neutral + 1);\r\n  };\r\n  const badVoise = () => {\r\n    setBad((bad) => bad + 1);\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Please leave feedback</h1>\r\n\r\n      <Sections>\r\n        <FeedbackOptions\r\n          good={goodVoise}\r\n          neutral={neuiralVoise}\r\n          bad={badVoise}\r\n        />\r\n        <Statistics\r\n          title=\"Statistics\"\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n        />\r\n      </Sections>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}